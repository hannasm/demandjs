{"version":3,"sources":["../demand.js"],"names":[],"mappings":";;;;;;AAAA,CAAC,UAAU,GAAV,EAAe;AAAA,MACR,QADQ;AAAA;AAAA;AAAA,sCAEI,SAFJ,EAEe;AAAA;AAAA;AAAA;;AAAA;AACzB,+BAAqB,SAArB,8HAAgC;AAAA,gBAAvB,QAAuB;;AAC9B,gBAAI,SAAS,IAAT,KAAkB,WAAtB,EAAmC;AAAE;AAAW;AADlB;AAAA;AAAA;;AAAA;AAE9B,oCAAkB,SAAS,UAA3B,mIAAuC;AAAA,oBAA9B,KAA8B;;AACrC,oBAAI,KAAK,aAAL,CAAmB,KAAnB,CAAJ,EAA+B;AAC7B,uBAAK,aAAL,CAAmB,KAAnB;AACD;AACF;AAN6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO/B;AARwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAS1B;AAXW;AAAA;AAAA,0CAYQ,aAZR,EAYuB;AAAA;AAAA;AAAA;;AAAA;AACjC,gCAAsB,aAAtB,mIAAqC;AAAA,gBAA5B,SAA4B;;AACnC,gBAAI,CAAC,UAAU,cAAf,EAA+B;AAAE;AAAW;AAC5C,gBAAI,MAAM,KAAK,UAAL,CAAgB,GAAhB,CAAoB,UAAU,MAA9B,CAAV;AACA,gBAAI,QAAQ,SAAR,IAAqB,IAAI,OAA7B,EAAsC;AAAE;AAAW;AACnD,gBAAI,OAAJ,GAAc,IAAd;AACA,iBAAK,SAAL,CAAe,GAAf;AACD;AAPgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQlC;AApBW;AAAA;AAAA,gCAqBF,MArBE,EAqBM;AAAA;;AAAA,6BACa,KAAK,aAAL,CAAmB,MAAnB,CADb;AAAA,YACX,MADW,kBACX,MADW;AAAA,YACH,YADG,kBACH,YADG;;AAEhB,YAAI,aAAa,SAAb,CAAuB,gBAA3B,EAA6C;AAC3C,cAAI,MAAM,aAAa,SAAb,CAAuB,IAAjC;AACA,eAAK,OAAL,CAAa,WAAb,CAAyB,MAAzB;AACA,gBAAM,GAAN,EAAW,IAAX,CAAgB,UAAU,QAAV,EAAoB;AAClC,gBAAI,CAAC,SAAS,EAAd,EAAkB;AAChB,oBAAM,MAAM,SAAS,MAAT,GAAkB,GAAlB,GAAwB,SAAS,UAAvC,CAAN;AACD;AACD,mBAAO,SAAS,IAAT,EAAP;AACD,WALD,EAKG,IALH,CAKQ,eAAK;AACX,kBAAK,UAAL,CAAgB,YAAhB,EAA8B,GAA9B;AACD,WAPD,EAOG,KAPH,CAOS,cAAI;AACX,kBAAK,WAAL,CAAiB,YAAjB,EAA+B,EAA/B;AACD,WATD;AAUD,SAbD,MAaO,IAAI,aAAa,SAAb,CAAuB,aAA3B,EAA0C;AAC/C;AACA,qBAAW;AAAA,mBAAI,MAAK,aAAL,CAAmB,YAAnB,CAAJ;AAAA,WAAX,EAAiD,CAAjD;AACD,SAHM,MAGA;AACL,gBAAM,wBAAN;AACD;AACF;AA1CW;AAAA;AAAA,+BA2CH,MA3CG,EA2CK;AACf,eAAO,OAAO,QAAP,IAAmB,KAA1B;AACD;AA7CW;AAAA;AAAA,iCA8CD,MA9CC,EA8CO,GA9CP,EA8CY;AAAA,8BACO,KAAK,aAAL,CAAmB,MAAnB,CADP;AAAA,YACjB,MADiB,mBACjB,MADiB;AAAA,YACT,YADS,mBACT,YADS;;AAEtB,YAAI,OAAO,aAAa,SAAb,CAAuB,IAAlC;AACA,YAAI,QAAQ,KAAK,OAAL,CAAa,YAAzB,EAAuC;AACrC,cAAI,UAAU,KAAK,OAAL,CAAa,YAAb,CAA0B,IAA1B,CAAd;AACA,kBAAQ,MAAR,EAAgB,GAAhB;AACD,SAHD,MAGO;AACL,gBAAM,4CAA4C,IAAlD;AACD;AACD,aAAK,cAAL,CAAoB,YAApB;AACD;AAxDW;AAAA;AAAA,mCAyDC,MAzDD,EAyDS,EAzDT,EAyDa,IAzDb,EAyDmB;AAC7B,YAAI,QAAQ,SAAS,KAArB;AACA,YAAI,UAAU,EAAd;AACA,iBAAS,KAAT,GAAiB;AAAA,iBAAG,WAAW,CAAd;AAAA,SAAjB;;AAEA,YAAI,gBAAgB,IAAI,QAAJ,CAAa,OAAO,IAAP,GAAc,gBAAd,GAAiC,EAA9C,CAApB;AACA;;AAEA,YAAI,YAAY,EAAhB,EAAoB;AAClB,eAAK,UAAL,CAAgB,MAAhB,EAAwB,WAAW,OAAX,GAAqB,SAA7C;AACD;;AAED,iBAAS,KAAT,GAAiB,KAAjB;AACD;AAtEW;AAAA;AAAA,iCAuED,MAvEC,EAuEO,GAvEP,EAuEY;AAAA;;AACtB,YAAI,OAAO,SAAS,aAAT,CAAuB,MAAvB,CAAX;AACA,aAAK,SAAL,GAAiB,GAAjB;AACA,YAAI,SAAS,KAAK,oBAAL,CAA0B,MAA1B,CAAb;AACA,YAAI,WAAW,CAAf;AAJsB;AAAA;AAAA;;AAAA;AAKtB,gCAAiB,MAAjB,mIAAyB;AAAA,gBAAhB,IAAgB;AAAA;AAAA;AAAA;;AAAA;AACvB,oCAAe,KAAK,QAApB,mIAA8B;AAAA,oBAArB,EAAqB;;AAC5B,oBAAI,aAAa,EAAb,IAAmB,GAAG,OAAH,CAAW,KAAX,CAAiB,SAAjB,CAAvB,EAAoD;AAAA;AAClD,wBAAI,gBAAgB,QAApB;AACA,gCAAY,CAAZ;AACA,wBAAI,cAAc,QAAQ,OAAR,CAAgB,GAAG,SAAnB,CAAlB;AACA,wBAAI,SAAS,EAAT,IAAe,CAAE,CAAE,GAAG,GAA1B,EAAiC;AAC/B,oCAAc,MAAM,GAAG,GAAT,EAAc,IAAd,CAAmB,oBAAU;AACzC,4BAAI,CAAC,SAAS,EAAd,EAAkB;AAChB,gCAAM,MAAM,SAAS,MAAT,GAAkB,GAAlB,GAAwB,SAAS,UAAvC,CAAN;AACD;AACD,+BAAO,SAAS,IAAT,EAAP;AACD,uBALa,CAAd;AAMD;AACD,gCAAY,IAAZ,CAAiB,gBAAM;AACrB,6BAAK,YAAL,CAAkB,MAAlB,EAA0B,OAAO,IAAP,GAAc,UAAd,GAA2B,aAA3B,GAA2C,MAArE,EAA6E,IAA7E;AACD,qBAFD;AAZkD;AAenD,iBAfD,MAeO;AACL,yBAAO,UAAP,CAAkB,YAAlB,CAA+B,EAA/B,EAAmC,MAAnC;AACD;AACF;AApBsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBxB;AA1BqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BvB;AAlGW;AAAA;AAAA,qCAmGG,MAnGH,EAmGW;AAAA,8BACQ,KAAK,aAAL,CAAmB,MAAnB,CADR;AAAA,YAChB,MADgB,mBAChB,MADgB;AAAA,YACR,YADQ,mBACR,YADQ;;AAErB,YAAI,QAAQ,KAAK,OAAL,CAAa,kBAAb,CAAgC,aAAa,MAA7C,CAAZ;AAFqB;AAAA;AAAA;;AAAA;AAGrB,gCAAwB,aAAa,YAArC,mIAAmD;AAAA,gBAA1C,WAA0C;;AACjD,gBAAI,KAAJ,EAAW;AACT,sBAAQ,KAAR;AACA,0BAAY,UAAZ,CAAuB,YAAvB,CAAoC,aAAa,MAAjD,EAAyD,WAAzD;AACD;AACD,iBAAK,kBAAL,CAAwB,WAAxB;AACD;AAToB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUrB,aAAK,yBAAL,CAA+B,YAA/B;AACA,aAAK,OAAL,CAAa,SAAb,CAAuB,MAAvB;AACA,aAAK,OAAL,CAAa,cAAb,CAA4B,MAA5B;AACD;AAhHW;AAAA;AAAA,yCAiHO,WAjHP,EAiHoB;AAC5B,aAAK,YAAL,CAAkB,SAAlB,CAA4B,WAA5B;AACA,oBAAY,UAAZ,CAAuB,WAAvB,CAAmC,WAAnC;AACA,aAAK,UAAL,CAAgB,MAAhB,CAAuB,WAAvB;AACH;AArHW;AAAA;AAAA,gDAsHc,YAtHd,EAsH4B;AACtC,aAAK,YAAL,CAAkB,SAAlB,CAA4B,aAAa,MAAzC,EADsC,CACY;AAClD,aAAK,UAAL,CAAgB,MAAhB,CAAuB,aAAa,MAApC;AACA,aAAK,MAAL,CAAY,GAAZ,CAAgB,aAAa,MAA7B,EAAqC,IAArC;AACD;AA1HW;AAAA;AAAA,kCA2HA,MA3HA,EA2HQ,GA3HR,EA2Ha;AAAA,8BACM,KAAK,aAAL,CAAmB,MAAnB,CADN;AAAA,YAClB,MADkB,mBAClB,MADkB;AAAA,YACV,YADU,mBACV,YADU;;AAEvB,YAAI,QAAQ,IAAZ;AAFuB;AAAA;AAAA;;AAAA;AAGvB,gCAAwB,aAAa,YAArC,mIAAmD;AAAA,gBAA1C,WAA0C;;AACjD,gBAAI,KAAJ,EAAW;AACT,sBAAQ,KAAR;AACA,kBAAI,UAAU,KAAK,OAAL,CAAa,eAAb,CAA6B,aAAa,MAA1C,CAAd;AAFS;AAAA;AAAA;;AAAA;AAGT,sCAAgB,OAAhB,mIAAyB;AAAA,sBAAhB,GAAgB;;AACvB,8BAAY,UAAZ,CAAuB,YAAvB,CAAoC,GAApC,EAAyC,WAAzC;AACD;AALQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMV;AACD,iBAAK,kBAAL,CAAwB,WAAxB;AACD;AAZsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcvB,aAAK,yBAAL,CAA+B,YAA/B;AACA,aAAK,OAAL,CAAa,WAAb,CAAyB,MAAzB;AACA,aAAK,OAAL,CAAa,cAAb,CAA4B,MAA5B;AACD;AA5IW;AAAA;AAAA,wCA6IM;AAChB,YAAI,MAAM,SAAS,aAAT,CAAuB,KAAvB,CAAV;AACA,YAAI,SAAJ,GAAgB,KAAK,OAAL,CAAa,SAA7B;AACA,eAAO,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,IAAI,UAA/B,CAAP;AACD;AAjJW;AAAA;AAAA,0CAkJQ;AAClB,YAAI,MAAM,SAAS,aAAT,CAAuB,KAAvB,CAAV;AACA,YAAI,SAAJ,GAAgB,KAAK,OAAL,CAAa,WAA7B;AACA,eAAO,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,IAAI,UAA/B,CAAP;AACD;AAtJW;AAAA;AAAA,0CAuJQ,IAvJR,EAuJc,MAvJd,EAuJsB,YAvJtB,EAuJoC,SAvJpC,EAuJ+C;AACzD,YAAI,SAAS;AACX,0BAAgB,IADL;AAEX,kBAAQ,MAFG;AAGX,gBAAM,IAHK;AAIX,wBAAc,YAJH;AAKX,qBAAW,SALA;AAMX,mBAAS;AANE,SAAb;AAQA,aAAK,UAAL,CAAgB,GAAhB,CAAoB,IAApB,EAA0B,MAA1B;AACA,eAAO,MAAP;AACD;AAlKW;AAAA;AAAA,oCAmKE,MAnKF,EAmKU;AACpB,YAAI,eAAe,MAAnB;AACA,YAAI,EAAE,oBAAoB,MAAtB,KAAiC,CAAE,OAAO,cAA9C,EAA+D;AAC7D,yBAAe,KAAK,UAAL,CAAgB,GAAhB,CAAoB,MAApB,CAAf;AACD,SAFD,MAEO;AACL,mBAAS,aAAa,MAAtB;AACD;AACD,eAAO;AACL,kBAAQ,MADH;AAEL,wBAAc;AAFT,SAAP;AAID;AA9KW;AAAA;AAAA,oCA+KE,MA/KF,EA+KU;AAAA,8BACS,KAAK,aAAL,CAAmB,MAAnB,CADT;AAAA,YACf,MADe,mBACf,MADe;AAAA,YACP,YADO,mBACP,YADO;;AAEpB,YAAI,YAAY,aAAa,SAA7B;AACA,qBAAa,OAAb,GAAuB,IAAvB;AACA,aAAK,OAAL,CAAa,WAAb,CAAyB,MAAzB;;AAEA,aAAK,sBAAL,CAA4B,MAA5B,EAAoC,SAApC;;AAEA,YAAI,CAAC,UAAU,OAAf,EAAwB;AACtB,eAAK,cAAL,CAAoB,YAApB;AACD;AACF;AA1LW;AAAA;AAAA,6CA2LW,MA3LX,EA2LmB,SA3LnB,EA2L8B;AACxC,YAAI,UAAU,SAAd,EAAyB;AACvB,iBAAO,YAAP,CAAoB,QAApB,EAA8B,UAAU,MAAxC;AACD;AACD,YAAI,UAAU,QAAd,EAAwB;AACtB,iBAAO,YAAP,CAAoB,OAApB,EAA6B,UAAU,KAAvC;AACD;AACD,YAAI,UAAU,MAAd,EAAsB;AACpB,iBAAO,YAAP,CAAoB,KAApB,EAA2B,UAAU,GAArC;AACD;AACD,YAAI,UAAU,QAAV,CAAmB,MAAnB,GAA4B,CAAhC,EAAmC;AACjC,eAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,UAAU,QAAV,CAAmB,MAAvC,EAA+C,GAA/C,EAAoD;AAClD,gBAAI,YAAY,UAAU,QAAV,CAAmB,CAAnB,CAAhB;AACA,iBAAK,sBAAL,CAA4B,UAAU,MAAtC,EAA8C,SAA9C;AACD;AACF;AACF;AA3MW;AAAA;AAAA,oCA4ME,MA5MF,EA4MU,UA5MV,EA4MsB;AAAA;;AAChC,YAAI,QAAQ;AACV,oBAAU,MADA;AAEV,oBAAW,OAAO,YAAP,CAAoB,KAApB,CAFD;AAGV,iBAAQ,OAAO,YAAP,CAAoB,KAApB,CAHE;AAIV,uBAAa,OAAO,YAAP,CAAoB,QAApB,CAJH;AAKV,oBAAU,OAAO,YAAP,CAAoB,QAApB,CALA;AAMV,sBAAY,OAAO,YAAP,CAAoB,OAApB,CANF;AAOV,mBAAS,OAAO,YAAP,CAAoB,OAApB,CAPC;AAQV,oBAAW,aAAa,MAAd,IAA0B,OAAO,OAAP,CAAe,KAAf,CAAqB,OAArB,CAR1B;AASV,qBAAW,OAAO,YAAP,CAAoB,MAApB,CATD;AAUV,kBAAQ,OAAO,YAAP,CAAoB,MAApB,CAVE;AAWV,qBAAW,OAAO,YAAP,CAAoB,MAApB,CAXD;AAYV,kBAAQ,OAAO,YAAP,CAAoB,MAApB,CAZE;AAaV,sBAAY,EAbF;AAcV,2BAAiB,KAdP;AAeV,qBAAW,KAfD;AAgBV,8BAAoB;AAhBV,SAAZ;AAkBA,YAAI,MAAM,MAAV,EAAkB;AAChB,iBAAO,eAAP,CAAuB,KAAvB;AACD;AACD,YAAI,MAAM,SAAV,EAAqB;AACnB,iBAAO,eAAP,CAAuB,QAAvB;AACD;AACD,YAAI,MAAM,QAAV,EAAoB;AAClB,iBAAO,eAAP,CAAuB,OAAvB;AACD;;AAED,YAAI,MAAM,MAAN,IAAgB,MAAM,OAA1B,EAAmC;AACjC,gBAAM,gBAAN,GAAyB,IAAzB;AACA,cAAI,CAAC,MAAM,OAAX,EAAoB;AAClB,kBAAM,IAAN,GAAa,WAAb;AACD;AACF;;AAGD;AACA,YAAI,CAAC,MAAM,MAAN,IAAgB,MAAM,SAAvB,KAAqC,WAAW,UAApD,EAAgE;AAC9D,gBAAM,aAAN,GAAsB,IAAtB;AACA,gBAAM,OAAN,GAAgB,IAAhB;AACA,iBAAO,gBAAP,CAAwB,MAAxB,EAAgC;AAAA,mBAAK,OAAK,cAAL,CAAoB,UAApB,CAAL;AAAA,WAAhC;AACA,iBAAO,gBAAP,CAAwB,OAAxB,EAAiC;AAAA,mBAAK,OAAK,WAAL,CAAiB,UAAjB,EAA6B,GAA7B,CAAL;AAAA,WAAjC;AACD;;AAED,YAAI,aAAa,MAAb,IAAuB,OAAO,OAAP,CAAe,KAAf,CAAqB,sBAArB,CAA3B,EAAyE;AACvE,cAAI,WAAW,UAAf,EAA2B;AACzB,kBAAM,aAAN,GAAsB,IAAtB;AACD;AACD,eAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,OAAO,QAAP,CAAgB,MAApC,EAA4C,GAA5C,EAAiD;AAC/C,gBAAI,QAAQ,OAAO,QAAP,CAAgB,CAAhB,CAAZ;AACA,gBAAI,OAAO,KAAK,aAAL,CAAmB,KAAnB,CAAX;AACA,iBAAK,KAAL,GAAa,CAAb;AACA,kBAAM,QAAN,CAAe,IAAf,CAAoB,IAApB;AACD;AACF;;AAED,eAAO,KAAP;AACD;AAtQW;AAAA;AAAA,wCAuQM,MAvQN,EAuQc;AACxB,YAAI,CAAC,MAAL,EAAa;AAAE,iBAAO,KAAP;AAAe;AAC9B,YAAI,EAAE,gBAAgB,MAAlB,CAAJ,EAA+B;AAAE,iBAAO,KAAP;AAAe;AAChD,YAAI,SAAS,OAAO,UAApB;AACA,YAAI,CAAC,MAAL,EAAa;AAAE,iBAAO,KAAP;AAAe;AAC9B,YAAI,EAAE,aAAa,MAAf,CAAJ,EAA4B;AAAE,iBAAO,KAAP;AAAe;AAC7C,YAAI,OAAO,OAAP,CAAe,KAAf,CAAqB,sBAArB,CAAJ,EAAkD;AAAE,iBAAO,IAAP;AAAc;;AAElE;AACA,eAAO,KAAK,iBAAL,CAAuB,MAAvB,CAAP;AACD;AAjRW;AAAA;AAAA,oCAkRE,MAlRF,EAkRU;AACpB,YAAI,KAAK,QAAL,CAAc,MAAd,CAAJ,EAA2B;AACzB;AACD,SAFD,MAEO,IAAI,KAAK,iBAAL,CAAuB,MAAvB,CAAJ,EAAoC;AACzC;AACD,SAFM,MAEA;AACL,cAAI,QAAQ,KAAK,aAAL,CAAmB,MAAnB,EAA2B,MAA3B,CAAZ;AACA,cAAI,eAAe,KAAK,OAAL,CAAa,iBAAb,CAA+B,MAA/B,CAAnB;AAFK;AAAA;AAAA;;AAAA;AAGL,kCAAwB,YAAxB,mIAAsC;AAAA,kBAA7B,WAA6B;;AACpC,mBAAK,mBAAL,CAAyB,WAAzB,EAAsC,MAAtC,EAA8C,YAA9C,EAA4D,KAA5D;AACA,qBAAO,UAAP,CAAkB,YAAlB,CAA+B,WAA/B,EAA4C,MAA5C;AACA,mBAAK,YAAL,CAAkB,OAAlB,CAA0B,WAA1B;AACD;AAPI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQL,eAAK,mBAAL,CAAyB,MAAzB,EAAiC,MAAjC,EAAyC,YAAzC,EAAuD,KAAvD;AACA,cAAI,KAAK,OAAL,CAAa,YAAb,CAA0B,MAA1B,CAAJ,EAAuC;AACrC,mBAAO,UAAP,CAAkB,WAAlB,CAA8B,MAA9B;AACD,WAFD,MAEO;AACL,iBAAK,YAAL,CAAkB,OAAlB,CAA0B,MAA1B;AACD;AACF;AACF;AAtSW;AAAA;AAAA,qCAuSG,OAvSH,EAuSY;AAAA;AAAA;AAAA;;AAAA;AACtB,iCAAmB,OAAnB,wIAA4B;AAAA,gBAAnB,MAAmB;;AAC1B,iBAAK,aAAL,CAAmB,MAAnB;AACD;AAHqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIvB;AA3SW;AAAA;AAAA,oCA4SE,MA5SF,EA4SU;AACpB,YAAI,KAAK,MAAL,CAAY,GAAZ,CAAgB,MAAhB,CAAJ,EAA6B;AAAE,iBAAO,KAAP;AAAe;AAC9C,eAAO,aAAa,MAAb,IAAuB,OAAO,OAAP,CAAe,KAAK,OAAL,CAAa,QAA5B,CAA9B;AACD;AA/SW;AAAA;AAAA,qCAgTG;AACb,YAAI,SAAS,EAAb;AADa;AAAA;AAAA;;AAAA;AAEb,iCAAiB,SAAS,gBAAT,CAA0B,KAAK,OAAL,CAAa,QAAvC,CAAjB,wIAAmE;AAAA,gBAA1D,IAA0D;;AACjE,mBAAO,IAAP,CAAY,IAAZ;AACD;AAJY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKb,eAAO,MAAP;AACD;AAtTW;AAAA;AAAA,mCAuTC,CAvTD,EAuTI;AACd,eAAO,EAAE,aAAa,CAAf,KAAqB,CAAE,EAAE,OAAF,CAAU,KAAV,CAAgB,OAAhB,CAA9B;AACD;AAzTW;;AA0TZ,sBAAY,OAAZ,EAAqB;AAAA;;AAAA;;AACnB,WAAK,UAAL,GAAkB,IAAI,OAAJ,EAAlB;AACA,WAAK,MAAL,GAAc,IAAI,OAAJ,EAAd;;AAEA,UAAI,cAAc,EAAlB;AACA,UAAI,WAAW,kBAAkB,OAAjC,EAA0C;AACxC,sBAAc,QAAQ,YAAtB;AACA,eAAO,QAAQ,YAAf;AACD;AACD,WAAK,OAAL,GAAe,OAAO,MAAP,CAAc;AAC3B,qBAAa,+DADc;AAE3B,mBAAW,2EAFgB;AAG3B,2BAAmB;AAAA,iBAAG,OAAK,iBAAL,EAAH;AAAA,SAHQ;AAI3B,yBAAiB;AAAA,iBAAG,OAAK,eAAL,EAAH;AAAA,SAJU;AAK3B,sBAAc;AAAA,iBAAG,EAAE,aAAa,CAAf,KAAqB,CAAE,EAAE,OAAF,CAAU,KAAV,CAAgB,OAAhB,CAA1B;AAAA,SALa;AAM3B,4BAAoB;AAAA,iBAAG,OAAK,OAAL,CAAa,YAAb,CAA0B,CAA1B,CAAH;AAAA,SANO;AAO3B,kBAAU,sCAPiB;AAQ3B,oBAAY,MARe;AAS3B,mBAAW,CATgB;AAU3B,qBAAa,wBAAG,CAAE,CAVS;AAW3B,mBAAW,sBAAG,CAAE,CAXW;AAY3B,qBAAa,wBAAG,CAAE,CAZS;AAa3B,wBAAgB,2BAAG,CAAE,CAbM;AAc3B,sBAAc;AACZ,uBAAa,kBAAC,CAAD,EAAG,CAAH;AAAA,mBAAO,OAAK,UAAL,CAAgB,CAAhB,EAAkB,CAAlB,CAAP;AAAA,WADD;AAEZ,mCAAyB,6BAAC,CAAD,EAAG,CAAH;AAAA,mBAAO,OAAK,UAAL,CAAgB,CAAhB,EAAkB,CAAlB,CAAP;AAAA;AAFb;AAda,OAAd,EAkBZ,OAlBY,CAAf;AAmBA,WAAK,OAAL,CAAa,YAAb,GAA4B,OAAO,MAAP,CAAc,KAAK,OAAL,CAAa,YAA3B,EAAyC,WAAzC,CAA5B;;AAEA,WAAK,QAAL,GAAgB,IAAI,gBAAJ,CAAqB,UAAC,CAAD,EAAG,CAAH;AAAA,eAAO,OAAK,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAAP;AAAA,OAArB,CAAhB;AACA,WAAK,eAAL,GAAuB;AACrB,mBAAW,IADU;AAErB,iBAAS;AAFY,OAAvB;;AAKA,WAAK,mBAAL,GAA2B;AACzB,cAAM,IADmB;AAEzB,oBAAW,KAAK,OAAL,CAAa,UAFC;AAGzB,mBAAU,KAAK,OAAL,CAAa;AAHE,OAA3B;AAKA,WAAK,YAAL,GAAoB,IAAI,oBAAJ,CAA0B,UAAC,CAAD,EAAG,CAAH;AAAA,eAAO,OAAK,mBAAL,CAAyB,CAAzB,EAA2B,CAA3B,CAAP;AAAA,OAA1B,EAAgE,KAAK,mBAArE,CAApB;;AAEA,WAAK,cAAL,CAAoB,KAAK,YAAL,EAApB;AACA,WAAK,QAAL,CAAc,OAAd,CAAsB,SAAS,IAA/B,EAAqC,KAAK,eAA1C;AACD;;AAvWW;AAAA;;AA0Wd,SAAO,QAAP,GAAkB,QAAlB;AACD,CA3WD,EA2WG,MA3WH","file":"demand.js","sourcesContent":["(function (ctx) {\n  class DemandJS {\n    observeMutation(mutations) {\n      for (var mutation of mutations) {\n        if (mutation.type !== 'childList') { continue; }\n        for (var added of mutation.addedNodes) {\n          if (this.isTargetMatch(added)) {\n            this.observeTarget(added);\n          }\n        }\n      }\n    }\n    observeIntersection(intersections) {\n      for (var intersect of intersections) {\n        if (!intersect.isIntersecting) { continue; }\n        let reg = this.phRegistry.get(intersect.target);\n        if (reg === undefined || reg.loading) { continue; }\n        reg.loading = true;\n        this.beginLoad(reg);   \n      }\n    }\n    beginLoad(target) {\n      var {target, registration} = this.resolveTarget(target);\n      if (registration.extraData.shouldInjectLink) {\n        let url = registration.extraData.href;\n        this.options.onLoadBegin(target);\n        fetch(url).then(function (response) {\n          if (!response.ok) {\n            throw Error(response.status + '_' + response.statusText);\n          }\n          return response.text();\n        }).then(txt=>{\n          this.injectLink(registration, txt);\n        }).catch(ex=>{\n          this.onLoadError(registration, ex);\n        });\n      } else if (registration.extraData.shouldRestore) {\n        // setTimeout helps keep loading animations smooth\n        setTimeout(()=>this.restoreTarget(registration), 0);\n      } else {\n        throw 'Unknown load operation';\n      }\n    }\n    isLoaded(target) {\n      return target.complete || false;\n    }\n    injectLink(target, txt) {\n      var {target, registration} = this.resolveTarget(target);\n      var type = registration.extraData.type;\n      if (type in this.options.linkHandlers) {\n        var handler = this.options.linkHandlers[type];\n        handler(target, txt);\n      } else {\n        throw 'Unknown link demand with content type: ' + type;\n      }\n      this.onLoadComplete(registration);\n    }\n    injectScript(target, id, code) {\n      var oldDw = document.write;\n      var content = '';\n      document.write = c=>content += c;\n\n      var codeToExecute = new Function(code + \"\\n\" + '//@ sourceURL=' + id);\n      codeToExecute();\n     \n      if (content !== '') { \n        this.injectHtml(target, '<body>' + content + '</body>');\n      }\n\n      document.write = oldDw;\n    }\n    injectHtml(target, txt) {\n      var root = document.createElement('html');\n      root.innerHTML = txt;\n      var bodies = root.getElementsByTagName('body');\n      let scriptId = 1;\n      for (var body of bodies) {\n        for (var bc of body.children) {\n          if ('tagName' in bc && bc.tagName.match(/script/i)) {\n            let localScriptId = scriptId;\n            scriptId += 1;\n            let codePromise = Promise.resolve(bc.innerHTML);\n            if ('src' in bc && !(!(bc.src))) {\n              codePromise = fetch(bc.src).then(response=>{\n                if (!response.ok) {\n                  throw Error(response.status + '_' + response.statusText);\n                }\n                return response.text();\n              }); \n            }\n            codePromise.then(code=>{\n              this.injectScript(target, target.href + '.inline[' + localScriptId + '].js', code);\n            });\n          } else {\n            target.parentNode.insertBefore(bc, target);\n          }\n        }\n      }\n    }\n    onLoadComplete(target) {\n      var {target, registration} = this.resolveTarget(target);\n      let first = this.options.shouldInsertOnLoad(registration.target);\n      for (var placeholder of registration.placeholders) {\n        if (first) {\n          first = false;\n          placeholder.parentNode.insertBefore(registration.target, placeholder);\n        }\n        this.cleanupPlaceholder(placeholder);\n      }\n      this.cleanupRegistrationTarget(registration);\n      this.options.onLoadEnd(target);\n      this.options.onLoadComplete(target);\n    }\n    cleanupPlaceholder(placeholder) {\n        this.intersection.unobserve(placeholder);\n        placeholder.parentNode.removeChild(placeholder);\n        this.phRegistry.delete(placeholder);\n    }\n    cleanupRegistrationTarget(registration) {\n      this.intersection.unobserve(registration.target); // this only necesarry when we didnt remove the item\n      this.phRegistry.delete(registration.target);\n      this.loaded.set(registration.target, true);\n    }\n    onLoadError(target, evt) {\n      var {target, registration} = this.resolveTarget(target);\n      let first = true;\n      for (var placeholder of registration.placeholders) {\n        if (first) {\n          first = false;\n          var errorUI = this.options.createErrorNode(registration.target);\n          for (var eui of errorUI) {\n            placeholder.parentNode.insertBefore(eui, placeholder);\n          }\n        }\n        this.cleanupPlaceholder(placeholder);\n      }\n\n      this.cleanupRegistrationTarget(registration);\n      this.options.onLoadError(target);\n      this.options.onLoadComplete(target);\n    }\n    createErrorNode() {\n      var ele = document.createElement('div');\n      ele.innerHTML = this.options.errorHtml;\n      return Array.prototype.slice.call(ele.childNodes);\n    }\n    createPlaceholder() {\n      var ele = document.createElement('div');\n      ele.innerHTML = this.options.pendingHtml;\n      return Array.prototype.slice.call(ele.childNodes);\n    }\n    registerPlaceholder(node, target, placeholders, extraData) {\n      var result = {\n        isRegistration: true,\n        target: target,\n        node: node,\n        placeholders: placeholders,\n        extraData: extraData,\n        loading: false\n      };\n      this.phRegistry.set(node, result);\n      return result;\n    }\n    resolveTarget(target) {\n      var registration = target;\n      if (!('isRegistration' in target) || !(target.isRegistration)) {\n        registration = this.phRegistry.get(target);\n      } else { \n        target = registration.target;\n      }\n      return {\n        target: target,\n        registration: registration\n      };\n    }\n    restoreTarget(target) {\n      var {target, registration} = this.resolveTarget(target);\n      var extraData = registration.extraData;\n      registration.loading = true;\n      this.options.onLoadBegin(target);\n\n      this._restoreTargetInternal(target, extraData);\n\n      if (!extraData.canLoad) {\n        this.onLoadComplete(registration);\n      }\n    }\n    _restoreTargetInternal(target, extraData) {\n      if (extraData.hasSrcset) {\n        target.setAttribute('srcset', extraData.srcset);\n      }\n      if (extraData.hasSizes) {\n        target.setAttribute('sizes', extraData.sizes);\n      }\n      if (extraData.hasSrc) {\n        target.setAttribute('src', extraData.src);\n      }\n      if (extraData.children.length > 0) {\n        for (var i = 0; i < extraData.children.length; i++) {\n          var childData = extraData.children[i];\n          this._restoreTargetInternal(childData.target, childData);\n        }\n      }\n    }\n    captureTarget(target, targetRoot) {\n      var store = {\n        'target': target,\n        'hasSrc':  target.hasAttribute('src'),\n        'src':  target.getAttribute('src'),\n        'hasSrcset': target.hasAttribute('srcset'),\n        'srcset': target.getAttribute('srcset'),\n        'hasSizes': target.hasAttribute('sizes'),\n        'sizes': target.getAttribute('sizes'),\n        'isLink': ('tagName' in target) && (target.tagName.match(/link/i)),\n        'hasHref': target.hasAttribute('href'),\n        'href': target.getAttribute('href'),\n        'hasType': target.hasAttribute('type'),\n        'type': target.getAttribute('type'),\n        'children': [],\n        'shouldRestore': false,\n        'canLoad': false,\n        'shouldInjectLink': false\n      };\n      if (store.hasSrc) {\n        target.removeAttribute('src');\n      }\n      if (store.hasSrcset) {\n        target.removeAttribute('srcset');\n      }\n      if (store.hasSizes) {\n        target.removeAttribute('sizes');\n      }\n\n      if (store.isLink && store.hasHref) {\n        store.shouldInjectLink = true;\n        if (!store.hasType) {\n          store.type = 'text/html';\n        }\n      }\n\n\n      // We do not care about load events of child elements\n      if ((store.hasSrc || store.hasSrcset) && target === targetRoot) {\n        store.shouldRestore = true;\n        store.canLoad = true;\n        target.addEventListener('load', evt=>this.onLoadComplete(targetRoot));\n        target.addEventListener('error', evt=>this.onLoadError(targetRoot, evt));\n      }\n\n      if ('tagName' in target && target.tagName.match(/picture|video|audio/i)) {\n        if (target === targetRoot) {\n          store.shouldRestore = true;\n        }\n        for (var i = 0; i < target.children.length; i++) {\n          var child = target.children[i];\n          var desc = this.captureTarget(child);\n          desc.index = i;\n          store.children.push(desc);\n        }\n      }\n\n      return store;\n    }\n    isContextExcluded(target) {\n      if (!target) { return false; }\n      if (!('parentNode' in target)) { return false; }\n      var parent = target.parentNode;\n      if (!parent) { return false; }\n      if (!('tagName' in parent)) { return false; }\n      if (parent.tagName.match(/picture|video|audio/i)) { return true; }\n\n      // need to recurse up for cases like video with embedded html as a fallback\n      return this.isContextExcluded(parent);\n    }\n    observeTarget(target) {\n      if (this.isLoaded(target)) {\n        // do nothing, its already fully loaded\n      } else if (this.isContextExcluded(target)) { \n        // do nothing, another element should take care of it\n      } else {\n        var store = this.captureTarget(target, target);\n        var placeholders = this.options.createPlaceholder(target);\n        for (var placeholder of placeholders) {\n          this.registerPlaceholder(placeholder, target, placeholders, store);\n          target.parentNode.insertBefore(placeholder, target);\n          this.intersection.observe(placeholder);\n        }\n        this.registerPlaceholder(target, target, placeholders, store);\n        if (this.options.shouldRemove(target)) {\n          target.parentNode.removeChild(target);\n        } else {\n          this.intersection.observe(target);\n        }\n      }\n    }\n    observeTargets(targets) {\n      for (var target of targets) {\n        this.observeTarget(target);\n      }\n    }\n    isTargetMatch(target) {\n      if (this.loaded.has(target)) { return false; }\n      return 'matches' in target && target.matches(this.options.selector);\n    }\n    queryTargets() {\n      let result = [];\n      for (var node of document.querySelectorAll(this.options.selector)) {\n        result.push(node);\n      }\n      return result;\n    }\n    shouldRemove(t) {\n      return !('tagName' in t) || !(t.tagName.match(/link/i)); \n    }\n    constructor(options) {\n      this.phRegistry = new WeakMap();\n      this.loaded = new WeakMap();\n\n      let newHandlers = {};\n      if (options && 'linkHandlers' in options) {\n        newHandlers = options.linkHandlers;\n        delete options.linkHandlers;\n      }\n      this.options = Object.assign({\n        pendingHtml: '<div style=\"width:100%;height:100%\">Loading In Progress</div>',\n        errorHtml: '<div style=\"background-color:#F00;color:#FFF;font-size:20pt;\">ERROR</div>',\n        createPlaceholder: t=>this.createPlaceholder(),\n        createErrorNode: t=>this.createErrorNode(),\n        shouldRemove: t=>!('tagName' in t) || !(t.tagName.match(/link/i)),\n        shouldInsertOnLoad: t=>this.options.shouldRemove(t),\n        selector: 'img,video,picture,iframe,link.demand',\n        rootMargin: '48px',\n        threshold: 0,\n        onLoadBegin: t=>{},\n        onLoadEnd: t=>{},\n        onLoadError: t=>{},\n        onLoadComplete: t=>{},\n        linkHandlers: {\n          'text/html': (t,c)=>this.injectHtml(t,c),\n          'application/xhtml+xml': (t,c)=>this.injectHtml(t,c)\n        }\n      }, options);\n      this.options.linkHandlers = Object.assign(this.options.linkHandlers, newHandlers);\n\n      this.mutation = new MutationObserver((a,b)=>this.observeMutation(a,b));\n      this.mutationOptions = {\n        childList: true,\n        subtree: true\n      };\n\n      this.intersectionOptions = {\n        root: null,\n        rootMargin:this.options.rootMargin,\n        threshold:this.options.threshold \n      };\n      this.intersection = new IntersectionObserver( (a,b)=>this.observeIntersection(a,b), this.intersectionOptions);\n\n      this.observeTargets(this.queryTargets());\n      this.mutation.observe(document.body, this.mutationOptions);\n    }\n  }\n\n  window.DemandJS = DemandJS;\n})(window);\n"]}